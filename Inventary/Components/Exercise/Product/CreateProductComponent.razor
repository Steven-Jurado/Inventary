@using Entities
@using Business
@inject NavigationManager NavManager

<div>
    <EditForm Model="OProduct">
        <div class="form-group">
            <label for="Referencia">
                Referencia:
            </label>
            <InputText @bind-Value="OProduct.ProductId" class="form-control" id="Referencia" />
        </div>
        <div class="form-group">
            <label for="Name">
                Nombre Del Producto:
            </label>
            <InputText @bind-Value="OProduct.ProductName" class="form-control" id="Name" />
        </div>
        <div class="form-group">
            <label for="Description">
                Descripcion:
            </label>
            <InputTextArea @bind-Value="OProduct.ProductDescription" class="form-control" id="Description" />
        </div>
        <div class="form-group">
            <label>
                Categoria:
                <InputSelect @bind-Value="OProduct.CategoryId" class="form-control">
                    @foreach(var category in Categories)
                    {
                        <option value="@category.CategoryId">
                            @category.CategoryName 
                        </option>
                    }
                </InputSelect>
            </label>
        </div>
        <input type="button" class="btn btn-primary" value="Agregar Producto" @onclick="SaveProduct" />

    </EditForm>
</div>


@code {
    ProductEntity OProduct = new ProductEntity();

    private void SaveProduct()
    {
        B_Productcs.CreateProduct(OProduct);
        NavManager.NavigateTo("product/list");
    }

    List<CategoryEntity> Categories = new List<CategoryEntity>();
    protected override Task OnInitializedAsync()
    {
        Categories = B_Category.CategoryList();
        return base.OnInitializedAsync();
    }

}
